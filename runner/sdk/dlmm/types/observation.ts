/**
 * This code was AUTOGENERATED using the Codama library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun Codama to update it.
 *
 * @see https://github.com/codama-idl/codama
 */

import {
  combineCodec,
  getI128Decoder,
  getI128Encoder,
  getI64Decoder,
  getI64Encoder,
  getStructDecoder,
  getStructEncoder,
  type FixedSizeCodec,
  type FixedSizeDecoder,
  type FixedSizeEncoder,
} from '@solana/kit';

export type Observation = {
  /** Cumulative active bin ID */
  cumulativeActiveBinId: bigint;
  /** Observation sample created timestamp */
  createdAt: bigint;
  /** Observation sample last updated timestamp */
  lastUpdatedAt: bigint;
};

export type ObservationArgs = {
  /** Cumulative active bin ID */
  cumulativeActiveBinId: number | bigint;
  /** Observation sample created timestamp */
  createdAt: number | bigint;
  /** Observation sample last updated timestamp */
  lastUpdatedAt: number | bigint;
};

export function getObservationEncoder(): FixedSizeEncoder<ObservationArgs> {
  return getStructEncoder([
    ['cumulativeActiveBinId', getI128Encoder()],
    ['createdAt', getI64Encoder()],
    ['lastUpdatedAt', getI64Encoder()],
  ]);
}

export function getObservationDecoder(): FixedSizeDecoder<Observation> {
  return getStructDecoder([
    ['cumulativeActiveBinId', getI128Decoder()],
    ['createdAt', getI64Decoder()],
    ['lastUpdatedAt', getI64Decoder()],
  ]);
}

export function getObservationCodec(): FixedSizeCodec<
  ObservationArgs,
  Observation
> {
  return combineCodec(getObservationEncoder(), getObservationDecoder());
}
