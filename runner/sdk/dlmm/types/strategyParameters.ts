/**
 * This code was AUTOGENERATED using the Codama library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun Codama to update it.
 *
 * @see https://github.com/codama-idl/codama
 */

import {
  combineCodec,
  fixDecoderSize,
  fixEncoderSize,
  getBytesDecoder,
  getBytesEncoder,
  getI32Decoder,
  getI32Encoder,
  getStructDecoder,
  getStructEncoder,
  type FixedSizeCodec,
  type FixedSizeDecoder,
  type FixedSizeEncoder,
  type ReadonlyUint8Array,
} from '@solana/kit';
import {
  getStrategyTypeDecoder,
  getStrategyTypeEncoder,
  type StrategyType,
  type StrategyTypeArgs,
} from '.';

export type StrategyParameters = {
  /** min bin id */
  minBinId: number;
  /** max bin id */
  maxBinId: number;
  /** strategy type */
  strategyType: StrategyType;
  /** parameters */
  parameteres: ReadonlyUint8Array;
};

export type StrategyParametersArgs = {
  /** min bin id */
  minBinId: number;
  /** max bin id */
  maxBinId: number;
  /** strategy type */
  strategyType: StrategyTypeArgs;
  /** parameters */
  parameteres: ReadonlyUint8Array;
};

export function getStrategyParametersEncoder(): FixedSizeEncoder<StrategyParametersArgs> {
  return getStructEncoder([
    ['minBinId', getI32Encoder()],
    ['maxBinId', getI32Encoder()],
    ['strategyType', getStrategyTypeEncoder()],
    ['parameteres', fixEncoderSize(getBytesEncoder(), 64)],
  ]);
}

export function getStrategyParametersDecoder(): FixedSizeDecoder<StrategyParameters> {
  return getStructDecoder([
    ['minBinId', getI32Decoder()],
    ['maxBinId', getI32Decoder()],
    ['strategyType', getStrategyTypeDecoder()],
    ['parameteres', fixDecoderSize(getBytesDecoder(), 64)],
  ]);
}

export function getStrategyParametersCodec(): FixedSizeCodec<
  StrategyParametersArgs,
  StrategyParameters
> {
  return combineCodec(
    getStrategyParametersEncoder(),
    getStrategyParametersDecoder()
  );
}
