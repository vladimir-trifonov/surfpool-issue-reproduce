/**
 * This code was AUTOGENERATED using the Codama library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun Codama to update it.
 *
 * @see https://github.com/codama-idl/codama
 */

import {
  combineCodec,
  getArrayDecoder,
  getArrayEncoder,
  getStructDecoder,
  getStructEncoder,
  getU128Decoder,
  getU128Encoder,
  getU64Decoder,
  getU64Encoder,
  type FixedSizeCodec,
  type FixedSizeDecoder,
  type FixedSizeEncoder,
} from '@solana/kit';

export type UserRewardInfo = {
  rewardPerTokenCompletes: Array<bigint>;
  rewardPendings: Array<bigint>;
};

export type UserRewardInfoArgs = {
  rewardPerTokenCompletes: Array<number | bigint>;
  rewardPendings: Array<number | bigint>;
};

export function getUserRewardInfoEncoder(): FixedSizeEncoder<UserRewardInfoArgs> {
  return getStructEncoder([
    ['rewardPerTokenCompletes', getArrayEncoder(getU128Encoder(), { size: 2 })],
    ['rewardPendings', getArrayEncoder(getU64Encoder(), { size: 2 })],
  ]);
}

export function getUserRewardInfoDecoder(): FixedSizeDecoder<UserRewardInfo> {
  return getStructDecoder([
    ['rewardPerTokenCompletes', getArrayDecoder(getU128Decoder(), { size: 2 })],
    ['rewardPendings', getArrayDecoder(getU64Decoder(), { size: 2 })],
  ]);
}

export function getUserRewardInfoCodec(): FixedSizeCodec<
  UserRewardInfoArgs,
  UserRewardInfo
> {
  return combineCodec(getUserRewardInfoEncoder(), getUserRewardInfoDecoder());
}
