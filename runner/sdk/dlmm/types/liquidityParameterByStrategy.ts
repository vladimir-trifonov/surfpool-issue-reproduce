/**
 * This code was AUTOGENERATED using the Codama library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun Codama to update it.
 *
 * @see https://github.com/codama-idl/codama
 */

import {
  combineCodec,
  getI32Decoder,
  getI32Encoder,
  getStructDecoder,
  getStructEncoder,
  getU64Decoder,
  getU64Encoder,
  type FixedSizeCodec,
  type FixedSizeDecoder,
  type FixedSizeEncoder,
} from '@solana/kit';
import {
  getStrategyParametersDecoder,
  getStrategyParametersEncoder,
  type StrategyParameters,
  type StrategyParametersArgs,
} from '.';

export type LiquidityParameterByStrategy = {
  /** Amount of X token to deposit */
  amountX: bigint;
  /** Amount of Y token to deposit */
  amountY: bigint;
  /** Active bin that integrator observe off-chain */
  activeId: number;
  /** max active bin slippage allowed */
  maxActiveBinSlippage: number;
  /** strategy parameters */
  strategyParameters: StrategyParameters;
};

export type LiquidityParameterByStrategyArgs = {
  /** Amount of X token to deposit */
  amountX: number | bigint;
  /** Amount of Y token to deposit */
  amountY: number | bigint;
  /** Active bin that integrator observe off-chain */
  activeId: number;
  /** max active bin slippage allowed */
  maxActiveBinSlippage: number;
  /** strategy parameters */
  strategyParameters: StrategyParametersArgs;
};

export function getLiquidityParameterByStrategyEncoder(): FixedSizeEncoder<LiquidityParameterByStrategyArgs> {
  return getStructEncoder([
    ['amountX', getU64Encoder()],
    ['amountY', getU64Encoder()],
    ['activeId', getI32Encoder()],
    ['maxActiveBinSlippage', getI32Encoder()],
    ['strategyParameters', getStrategyParametersEncoder()],
  ]);
}

export function getLiquidityParameterByStrategyDecoder(): FixedSizeDecoder<LiquidityParameterByStrategy> {
  return getStructDecoder([
    ['amountX', getU64Decoder()],
    ['amountY', getU64Decoder()],
    ['activeId', getI32Decoder()],
    ['maxActiveBinSlippage', getI32Decoder()],
    ['strategyParameters', getStrategyParametersDecoder()],
  ]);
}

export function getLiquidityParameterByStrategyCodec(): FixedSizeCodec<
  LiquidityParameterByStrategyArgs,
  LiquidityParameterByStrategy
> {
  return combineCodec(
    getLiquidityParameterByStrategyEncoder(),
    getLiquidityParameterByStrategyDecoder()
  );
}
