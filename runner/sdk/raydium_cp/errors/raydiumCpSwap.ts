/**
 * This code was AUTOGENERATED using the Codama library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun Codama to update it.
 *
 * @see https://github.com/codama-idl/codama
 */

import {
  isProgramError,
  type Address,
  type SOLANA_ERROR__INSTRUCTION_ERROR__CUSTOM,
  type SolanaError,
} from '@solana/kit';
import { RAYDIUM_CP_SWAP_PROGRAM_ADDRESS } from '../programs';

/** NotApproved: Not approved */
export const RAYDIUM_CP_SWAP_ERROR__NOT_APPROVED = 0x1770; // 6000
/** InvalidOwner: Input account owner is not the program address */
export const RAYDIUM_CP_SWAP_ERROR__INVALID_OWNER = 0x1771; // 6001
/** EmptySupply: Input token account empty */
export const RAYDIUM_CP_SWAP_ERROR__EMPTY_SUPPLY = 0x1772; // 6002
/** InvalidInput: InvalidInput */
export const RAYDIUM_CP_SWAP_ERROR__INVALID_INPUT = 0x1773; // 6003
/** IncorrectLpMint: Address of the provided lp token mint is incorrect */
export const RAYDIUM_CP_SWAP_ERROR__INCORRECT_LP_MINT = 0x1774; // 6004
/** ExceededSlippage: Exceeds desired slippage limit */
export const RAYDIUM_CP_SWAP_ERROR__EXCEEDED_SLIPPAGE = 0x1775; // 6005
/** ZeroTradingTokens: Given pool token amount results in zero trading tokens */
export const RAYDIUM_CP_SWAP_ERROR__ZERO_TRADING_TOKENS = 0x1776; // 6006
/** NotSupportMint: Not support token_2022 mint extension */
export const RAYDIUM_CP_SWAP_ERROR__NOT_SUPPORT_MINT = 0x1777; // 6007
/** InvalidVault: invaild vault */
export const RAYDIUM_CP_SWAP_ERROR__INVALID_VAULT = 0x1778; // 6008
/** InitLpAmountTooLess: Init lp amount is too less(Because 100 amount lp will be locked) */
export const RAYDIUM_CP_SWAP_ERROR__INIT_LP_AMOUNT_TOO_LESS = 0x1779; // 6009

export type RaydiumCpSwapError =
  | typeof RAYDIUM_CP_SWAP_ERROR__EMPTY_SUPPLY
  | typeof RAYDIUM_CP_SWAP_ERROR__EXCEEDED_SLIPPAGE
  | typeof RAYDIUM_CP_SWAP_ERROR__INCORRECT_LP_MINT
  | typeof RAYDIUM_CP_SWAP_ERROR__INIT_LP_AMOUNT_TOO_LESS
  | typeof RAYDIUM_CP_SWAP_ERROR__INVALID_INPUT
  | typeof RAYDIUM_CP_SWAP_ERROR__INVALID_OWNER
  | typeof RAYDIUM_CP_SWAP_ERROR__INVALID_VAULT
  | typeof RAYDIUM_CP_SWAP_ERROR__NOT_APPROVED
  | typeof RAYDIUM_CP_SWAP_ERROR__NOT_SUPPORT_MINT
  | typeof RAYDIUM_CP_SWAP_ERROR__ZERO_TRADING_TOKENS;

let raydiumCpSwapErrorMessages: Record<RaydiumCpSwapError, string> | undefined;
if (process.env.NODE_ENV !== 'production') {
  raydiumCpSwapErrorMessages = {
    [RAYDIUM_CP_SWAP_ERROR__EMPTY_SUPPLY]: `Input token account empty`,
    [RAYDIUM_CP_SWAP_ERROR__EXCEEDED_SLIPPAGE]: `Exceeds desired slippage limit`,
    [RAYDIUM_CP_SWAP_ERROR__INCORRECT_LP_MINT]: `Address of the provided lp token mint is incorrect`,
    [RAYDIUM_CP_SWAP_ERROR__INIT_LP_AMOUNT_TOO_LESS]: `Init lp amount is too less(Because 100 amount lp will be locked)`,
    [RAYDIUM_CP_SWAP_ERROR__INVALID_INPUT]: `InvalidInput`,
    [RAYDIUM_CP_SWAP_ERROR__INVALID_OWNER]: `Input account owner is not the program address`,
    [RAYDIUM_CP_SWAP_ERROR__INVALID_VAULT]: `invaild vault`,
    [RAYDIUM_CP_SWAP_ERROR__NOT_APPROVED]: `Not approved`,
    [RAYDIUM_CP_SWAP_ERROR__NOT_SUPPORT_MINT]: `Not support token_2022 mint extension`,
    [RAYDIUM_CP_SWAP_ERROR__ZERO_TRADING_TOKENS]: `Given pool token amount results in zero trading tokens`,
  };
}

export function getRaydiumCpSwapErrorMessage(code: RaydiumCpSwapError): string {
  if (process.env.NODE_ENV !== 'production') {
    return (raydiumCpSwapErrorMessages as Record<RaydiumCpSwapError, string>)[
      code
    ];
  }

  return 'Error message not available in production bundles.';
}

export function isRaydiumCpSwapError<
  TProgramErrorCode extends RaydiumCpSwapError,
>(
  error: unknown,
  transactionMessage: {
    instructions: Record<number, { programAddress: Address }>;
  },
  code?: TProgramErrorCode
): error is SolanaError<typeof SOLANA_ERROR__INSTRUCTION_ERROR__CUSTOM> &
  Readonly<{ context: Readonly<{ code: TProgramErrorCode }> }> {
  return isProgramError<TProgramErrorCode>(
    error,
    transactionMessage,
    RAYDIUM_CP_SWAP_PROGRAM_ADDRESS,
    code
  );
}
